{
  "name": "apps-list-01",
  "type": "registry:block",
  "dependencies": [
    "lucide-react",
    "@integrationos/authkit"
  ],
  "registryDependencies": [
    "https://raw.githubusercontent.com/krish221997/apps-list/refs/heads/main/public/r/styles/default/card.json",
    "https://raw.githubusercontent.com/krish221997/apps-list/refs/heads/main/public/r/styles/default/input.json"
  ],
  "files": [
    {
      "path": "block/apps-list-01.tsx",
      "content": "\"use client\";\n\nimport { Card } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Loader2, Search, AlertCircle } from \"lucide-react\";\nimport { useEffect, useState } from \"react\";\nimport { useOpenAuthKit } from \"@/hooks/use-open-authkit\"\n\nexport default function AppsList() {\n  const [apps, setApps] = useState<{ name: string; icon: string }[]>([]);\n  const [filteredApps, setFilteredApps] = useState<\n    { name: string; icon: string }[]\n  >([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<unknown>(null);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const { trigger } = useOpenAuthKit();\n\n  const handleOnClick = (title: string) => {\n    trigger(title);\n  };\n\n  useEffect(() => {\n    const fetchApps = async () => {\n      try {\n        const response = await fetch(\n          \"https://api.integrationos.com/v1/public/connection-definitions?limit=100&skip=0\"\n        );\n        const data = await response.json();\n\n        const fetchedApps = data?.rows\n          .map((app: any) => ({\n            name: app.frontend.spec.title,\n            icon: app.frontend.spec.image,\n          }))\n          .sort((a: { name: string }, b: { name: string }) =>\n            a.name.localeCompare(b.name)\n          );\n\n        setApps(fetchedApps);\n        setFilteredApps(fetchedApps);\n        setIsLoading(false);\n      } catch (error) {\n        setError(error);\n        setIsLoading(false);\n      }\n    };\n\n    fetchApps();\n  }, []);\n\n  useEffect(() => {\n    const filtered = apps.filter((app) =>\n      app.name.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n    setFilteredApps(filtered);\n  }, [searchTerm, apps]);\n\n  const handleSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchTerm(e.target.value);\n  };\n\n  return (\n    <div className=\"space-y-8\">\n      <div className=\"relative\">\n        <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground\" />\n        <Input\n          className=\"pl-10\"\n          placeholder=\"Search for more connections...\"\n          value={searchTerm}\n          onChange={handleSearch}\n          disabled={isLoading}\n        />\n      </div>\n\n      {isLoading ? (\n        <div className=\"flex flex-col items-center justify-center py-12\">\n          <Loader2 className=\"h-12 w-12 animate-spin text-primary\" />\n          <p className=\"mt-4 text-lg font-medium text-muted-foreground\">\n            Loading apps...\n          </p>\n        </div>\n      ) : error ? (\n        <div className=\"flex flex-col items-center justify-center py-12 text-center\">\n          <AlertCircle className=\"h-12 w-12 text-destructive\" />\n          <h2 className=\"mt-4 text-lg font-semibold\">\n            Oops! Something went wrong\n          </h2>\n          <p className=\"mt-2 text-sm text-muted-foreground\">\n            We could not load the apps. Please try again later.\n          </p>\n        </div>\n      ) : (\n        <div className=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 gap-4\">\n          {filteredApps.map((app) => (\n            <Card\n              onClick={() => handleOnClick(app.name)}\n              key={app.name}\n              className=\"p-4 flex flex-col items-center justify-center cursor-pointer hover:bg-muted transition-colors\"\n            >\n              <img src={app.icon} alt={app.name} className=\"w-12 h-12 mb-2\" />\n              <p className=\"text-sm font-medium text-center\">{app.name}</p>\n            </Card>\n          ))}\n        </div>\n      )}\n\n      {!isLoading && !error && filteredApps.length === 0 && (\n        <div className=\"text-center py-12\">\n          <p className=\"text-lg font-medium text-muted-foreground\">\n            No apps found matching your search.\n          </p>\n        </div>\n      )}\n    </div>\n  );\n}\n",
      "type": "registry:block",
      "target": ""
    },
    {
      "path": "hooks/use-open-authkit.ts",
      "content": "\"use client\";\n\n\nimport { useAuthKit } from \"@integrationos/authkit\";\nimport { useEffect, useState } from \"react\";\n\nexport const useOpenAuthKit = () => {\n    const [title, setTitle] = useState<string | null>(null);\n  \n    const { open } = useAuthKit({\n      selectedConnection: title || \"\",\n      token: {\n        url: process.env.NEXT_PUBLIC_URL as string,\n      },\n    });\n  \n    useEffect(() => {\n      if (title) {\n        open();\n      }\n    }, [title, open]);\n  \n    const trigger = (title: string) => {\n      if (!title) {\n        throw new Error(\"Title is required to trigger the AuthKit modal\");\n      }\n      setTitle(title);\n    };\n  \n    return {\n      trigger,\n    };\n  };",
      "type": "registry:hook"
    }
  ]
}